Version of session file format:
               1
Time of storage:
               "Sat Oct 20 18:04:55 UTC 2012"
Layout:        VerticalP (VerticalP (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 727) (HorizontalP (TerminalP {paneGroups = fromList [("Browser",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 309) 128),("Debug",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 2, detachedId = Nothing, detachedSize = Nothing}) 325)], paneTabs = Just BottomP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) 785) 1488
Population:    [(Just (BreakpointsSt BreakpointsState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (ErrorsSt ErrorsState),[SplitP RightP,SplitP TopP]),(Just (FilesSt FilesState),[SplitP RightP,SplitP TopP]),(Just (BufferSt (BufferState "/home/dan/Haskell/htms/Htms.hs" 314)),[SplitP LeftP,SplitP LeftP]),(Just (InfoSt (InfoState (Just (Real (RealDescr {dscName' = "socket", dscMbTypeStr' = Just "socket :: Family -> SocketType -> ProtocolNumber -> IO Socket\n", dscMbModu' = Just (PM {pack = PackageIdentifier {pkgName = PackageName "network", pkgVersion = Version {versionBranch = [2,3,0,14], versionTags = []}}, modu = ModuleName ["Network","Socket"]}), dscMbLocation' = Just (Location {locationSLine = 410, locationSCol = 1, locationELine = 413, locationECol = 20}), dscMbComment' = Just "Create a new socket using the given address family, socket type\n and protocol number.  The address family is usually 'Network.Socket.Internal.AF_INET',\n 'Network.Socket.Internal.AF_INET6', or 'Network.Socket.Internal.AF_UNIX'.  The socket type is usually 'Network.Socket.Stream' or\n 'Network.Socket.Datagram'.  The protocol number is usually 'Network.Socket.defaultProtocol'.\n If 'Network.Socket.Internal.AF_INET6' is used, the 'Network.Socket.IPv6Only' socket option is set to 0\n so that both IPv4 and IPv6 can be handled with one socket.\n\n", dscTypeHint' = VariableDescr, dscExported' = True}))))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP BottomP]),(Just (LogSt LogState),[SplitP RightP,SplitP BottomP]),(Just (ModulesSt (ModulesState 173 (PackageScope True,False) (Nothing,Nothing) (ExpanderState {packageExp = ([],[]), packageExpNoBlack = ([],[]), packageDExp = ([],[]), packageDExpNoBlack = ([[9]],[]), workspaceExp = ([],[]), workspaceExpNoBlack = ([],[]), workspaceDExp = ([],[]), workspaceDExpNoBlack = ([],[]), systemExp = ([],[]), systemExpNoBlack = ([[228,4],[228],[148,2],[148],[98]],[])}))),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP BottomP,SplitP TopP]),(Just (SearchSt (SearchState {searchString = "socket", searchScope = SystemScope, searchMode = Prefix {caseSense = False}})),[SplitP RightP,SplitP TopP]),(Just (TraceSt TraceState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (BufferSt (BufferState "/home/dan/Haskell/htms/Util.hs" 140)),[SplitP LeftP,SplitP RightP]),(Just (VariablesSt VariablesState),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (WorkspaceSt WorkspaceState),[SplitP RightP,SplitP TopP,GroupP "Browser",SplitP TopP]),(Just (BufferSt (BufferStateTrans "_Eval.hs" "2 + 2" 5)),[SplitP RightP,SplitP TopP,GroupP "Debug",SplitP TopP]),(Just (BufferSt (BufferState "/home/dan/Haskell/htms/htms.cabal" 414)),[SplitP LeftP,SplitP LeftP])]
Window size:   (1918,1047)
Completion size:
               (750,400)
Workspace:     Just "/home/dan/Haskell/htms/htms.lkshw"
Active pane:   Just "Htms.hs"
Toolbar visible:
               True
FindbarState:  (False,FindState {entryStr = "sockaddr", entryHist = ["sockaddr","forkIO","fromS","mstrict","strict","decode"], replaceStr = "", replaceHist = [], caseSensitive = False, entireWord = False, wrapAround = False, regex = False, lineNr = 1})
Recently opened files:
               ["/home/dan/.leksah-0.12/packageSources/network-2.3.0.14/dist/build/Network/Socket/Internal.hs","/home/dan/Haskell/htms/Util.hs","/home/dan/.leksah-0.12/packageSources/transformers-0.3.0.0/Control/Monad/Trans/State/Lazy.hs","/home/dan/.leksah-0.12/packageSources/network-2.3.0.14/dist/build/Network/Socket.hs","/home/dan/.leksah-0.12/packageSources/base-4.5.0.0/Prelude.hs","/home/dan/.leksah-0.12/packageSources/binary-0.5.1.0/src/Data/Binary.hs","/home/dan/.leksah-0.12/packageSources/bytestring-0.9.2.1/Data/ByteString/Lazy.hs","/home/dan/.leksah-0.12/packageSources/containers-0.4.2.1/Data/Map.hs","/home/dan/.leksah-0.12/packageSources/containers-0.4.2.1/Data/Graph.hs","/home/dan/.leksah-0.12/packageSources/bytestring-0.9.2.1/Data/ByteString.hs","/home/dan/.leksah-0.12/packageSources/network-2.3.0.14/dist/build/Network/Socket/ByteString.hs","/home/dan/.leksah-0.12/leksah-welcome/src/Main.hs"]
Recently opened workspaces:
               ["/home/dan/leksah.lkshw"]